

        DUP(3S)          Kreider OS-9 C Library          DUP(3S)


        NNAAMMEE 

             dup - duplicate an open path number

        SSYYNNOOPPSSIISS 

             dup(pn)
             int pn;

        DDEESSCCRRIIPPTTIIOONN 

             DDUUPP takes the path number _p_n as returned from an _o_p_e_n(), 
             _c_r_e_a_t(), or _c_r_e_a_t_e() call and returns another path number 
             associated with the same file.  

             DDUUPP is often used to duplicate the standard paths (stdin, 
             stdout, stderr) prior to forking a new process.  The new 
             process will then have these paths for its use.  

        EEXXAAMMPPLLEE 

             To use DUP to copy the standard paths:

             fork (cmd, parms, path)
             char *cmd, *parms;
             int path;
             
             {
                 int i;
                 int save[3];
             
                 for (i = 0; i <= 2; i++)
                     save[i] = dup (i);
             
                 for (i = 0; i <= 2; i++)
                     close (i);
             
                 for (i = 0; i <= 2; i++)
                     dup (path);
             
                 close (path);
             
                 os9fork (cmd, strlen(parms), parms, 1, 1, 0);
             
                 for (i = 0; i <= 2; i++) {
                     close (i);
                     dup (save[i]);
                     close (save[i]);
                 }

        DDIIAAGGNNOOSSTTIICCSS 

             A -1 is returned if the call fails because there are too 
             many opened files or the path number is invalid.  




                                                                




        DUP(3S)          Kreider OS-9 C Library          DUP(3S)


        SSEEEE AALLSSOO 

             open(), creat(), create(), close()























































                                                                


