

        GETC(3C)         Kreider OS-9 C Library         GETC(3C)


        NNAAMMEE 

             getc, getchar, getw - get character or word from a file

        SSYYNNOOPPSSIISS 

             #include <stdio.h>

             getc(fp)
             FILE *fp;

             getchar()

             getw(fp)
             FILE *fp;

        DDEESSCCRRIIPPTTIIOONN 

             The GGEETTCC function returns the next character (byte) from 
             the named input _f_p as an integer.  It also moves the file 
             pointer one characters ahead in the input stream.  

             The GGEETTCCHHAARR function is identical to _g_e_t_c (stdin).  

             The GGEETTWW function returns the next word (i.e. integer) from 
             the named input _f_p.  GGEETTWW.  This function assumes no 
             special alignment in the file.  

        CCAAVVEEAATTSS 

             Because it is implemented as a macro, GGEETTCCHHAARR treats a _f_p 
             argument with side effects incorrectly.  In particular, 
             '_g_e_t_c_h_a_r(*_f++);' doesn't work as expected.  

             These functions return the constant EOF upon end of file or 
             error, but since that is a good integer value, _f_e_o_f() and 
             _f_e_r_r_o_r() should be used to check the success of GGEETTWW.  

        SSPPEECCIIAALL CCOONNSSIIDDEERRAATTIIOONNSS 

             Under OS-9, there is a choice of system calls to use when 
             reading from a file.  _R_e_a_d() will get characters up to a 
             specified number in the "raw" mode, i.e., no editing will 
             take place on the input stream and the characters will 
             appear to the program exactly as in the file.  _R_e_a_d_l_n() on 
             the other hand, will honor the various mapping of 
             characters associated with a serial device such as a 
             terminal and will return as soon as a carriage return is 
             seen on the input.  

             In the vast majority of cases, it is preferable to use 
             _r_e_a_d_l_n() for accessing serial character devices and _r_e_a_d() 
             for any other file input.  GGEETTCC uses this strategy and as 
             all file input using the Standard Library functions is 




                                                                




        GETC(3C)         Kreider OS-9 C Library         GETC(3C)


             routed through GGEETTCC(), so do all the other input 
             functions.  The choice is made when the first call to 
             GGEETTCC() is made after the file has been opened.  The system 
             is consulted for the status of the file and a flag bit is 
             set in the file structure accordingly.  The choice may be 
             forced by the programmer by setting the relevant bit before 
             a call to GGEETTCC().  The flag bits are defined in SSTTDDIIOO.HH as 
             __S_C_F and __R_B_F and the method used is as follows: 

             Assuming that the file pointer for the file as returned by 
             _f_o_p_e_n() is _f, 

                  f->_flag |= _SCF

             will force the use of _r_e_a_d_l_n() on input, and 

                  f->flag |= _RBF

             will force the use of _r_e_a_d().  This trick may be played on 
             the standard input, output, and error files without the 
             need to call _f_o_p_e_n() but must be made before any input is 
             requested from these files.  

        DDIIAAGGNNOOSSTTIICCSS 

             These functions return the integer constant EOF (-1) at end 
             of file or upon read error.  

        SSEEEE AALLSSOO 

             fopen(), fread(), gets(), putc(), scanf(), ungetc()



























                                                                


