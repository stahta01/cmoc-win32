

        READ(3S)         Kreider OS-9 C Library         READ(3S)


        NNAAMMEE 

             read, readln - read from a file

        SSYYNNOOPPSSIISS 

             read(pn, buffer, count)
             char *buffer;
             int pn, count;

             readln(pn, buffer, count)
             char *buffer;
             int pn, count;

        DDEESSCCRRIIPPTTIIOONN 

             The path number _p_n is an integer which is one of the 
             standard path number 0, 1, or 2, or the path number 
             returned from a successful call to _o_p_e_n(), _c_r_e_a_t(), 
             _c_r_e_a_t_e(), or _d_u_p(). _B_u_f_f_e_r is a pointer to memory space 
             with at least _c_o_u_n_t bytes of memory into which RREEAADD and 
             RREEAADDLLNN will put the data from the file.  

             It is guaranteed that at most _c_o_u_n_t bytes will be read from 
             the file, but often less will be, either because, for 
             RREEAADDLLNN, the file represents a terminal and input stops at 
             the end of a line, or for both, the end-of-file marker has 
             been reached.  

             RREEAADDLLNN causes "line editing" such as echoing to take place 
             and returns once the first '\n' is encountered in the input 
             stream, or the number of bytes requested in _c_o_u_n_t has been 
             reached.  RREEAADDLLNN is the preferred call for reading from the 
             user's terminal.  

             RREEAADD does not cause any line editing.  See the OS-9 manual 
             for a fuller description of the actions of these call.  

        DDIIAAGGNNOOSSTTIICCSS 

             RREEAADD and RREEAADDLLNN return the number of bytes actually read (0 
             at EOF), or -1 for a physical I/O error, a bad path number, 
             or a ridiculous _c_o_u_n_t.  The actual error (physical I/O or 
             otherwise) can be determined by examining the global 
             variable _e_r_r_n_o.  

             NNOOTTEE: EOF is not considered an error, and no error 
             indication is returned.  Zero is returned on EOF.  

        SEE ALSO 

             open(), creat(), create(), dup()






                                                                


