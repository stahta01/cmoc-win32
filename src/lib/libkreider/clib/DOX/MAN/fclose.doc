

        fclose(3C)       Kreider OS-9 C Library       fclose(3C)


        NNAAMMEE 

             fclose, fflush - close or flush a stream (file)

        SSYYNNOOPPSSIISS 

             #include <stdio.h>

             fclose(fp)
             FILE *fp;

             fflush(fp)
             FILE *fp;

        DDEESSCCRRIIPPTTIIOONN 

             The FFCCLLOOSSEE routine causes any buffers for the named file 
             pointer _f_p to be emptied, and the file to be closed.  
             Buffers allocated by the standard input/output system are 
             freed for use by another FFOOPPEENN call.  FFCCLLOOSSEE should always 
             be called to close access to a file when it is no longer 
             needed.  The FFCCLLOOSSEE routine is performed automatically upon 
             calling _e_x_i_t() .  The FFFFLLUUSSHH routine causes any buffered 
             data associated with the named output file pointer _f_p to be 
             cleared and written to that file, but only if the file was 
             opened in the write or update mode.  It is not normally 
             necessary to call FFFFLLUUSSHH, but it can be useful when, for 
             example, normal output is to _s_t_d_o_u_t, and it is wished to 
             send something to _s_t_d_e_r_r, which is unbuffered.  If FFFFLLUUSSHH 
             were not used and _s_t_d_o_u_t was referred to the terminal, the 
             _s_t_d_e_r_r message would appear before large chunks of the 
             _s_t_d_o_u_t message even though the latter was written first.  
             The file associated with _f_p remains open after the call.  

        DDIIAAGGNNOOSSTTIICCSS 

             These routines return _E_O_F if the file pointer _f_p is not 
             associated with an output file, or if buffered data cannot 
             be written to that file.  You should always check the 
             returned status of and FFCCLLOOSSEE call.  

        CCAAVVEEAATTSS 

             In cases where FFCCLLOOSSEE is called as a result of an _e_x_i_t() 
             call, the error may be returned, but no process is running 
             to receive it.  In this case, the data in the buffer will 
             not be written to the file and the operator will NOT GET an 
             error message.  

        SSEEEE AALLSSOO 

             exit(), close(), fopen(), setbuf()






                                                                


