

        MALLOC(3C)       Kreider OS-9 C Library       MALLOC(3C)


        NNAAMMEE 

             malloc, free, realloc, calloc - memory allocation

        SSYYNNOOPPSSIISS 

             char *malloc(size)
             unsigned size;

             free(ptr)
             char *ptr;

             char *realloc(ptr, size)
             char *ptr;
             unsigned size;

             char *calloc(nelem, elsize)
             unsigned nelem, elsize;

        DDEESSCCRRIIPPTTIIOONN 

             The MMAALLLLOOCC and FFRREEEE subroutines provide a simple 
             general-purpose memory allocation package.  The MMAALLLLOOCC 
             subroutine returns a pointer to a block of at least _s_i_z_e 
             bytes beginning on a word boundary.  

             The argument to FFRREEEE is a pointer to a block previously 
             allocated by MMAALLLLOOCC.  This space is made available for 
             further allocation, but its contents are left undisturbed.  

             Needless to say, grave disorder will result if the space 
             assigned by MMAALLLLOOCC is overrun or if some random number is 
             handed to FFRREEEE.  

             The MMAALLLLOOCC subroutine maintains multiple lists of free 
             blocks according to size, allocating space from the 
             appropriate list.  It calls _s_b_r_k to get more memory from 
             the system when there is no suitable space already free.  
             For further information, see _b_r_k().  

             The RREEAALLLLOOCC subroutine changes the size of the block 
             pointed to by _p_t_r to _s_i_z_e bytes and returns a pointer to 
             the (possibly moved) block.  The contents will be unchanged 
             up to the lesser of the new and old sizes.  

             If the pointer arguement _p_t_r is zero, then RREEAALLLLOOCC 
             degenerates into a MMAALLLLOOCC.  

             In order to be compatible with older versions, _R_E_A_L_L_O_C also 
             works if _p_t_r points to a block freed since the last call of 
             MMAALLLLOOCC, RREEAALLLLOOCC, or _C_A_L_L_O_C.  Sequences of FFRREEEE, MMAALLLLOOCC, and 
             RREEAALLLLOOCC were previously used to attempt storage 
             compaction.  This procedure is no longer recommended.  





                                                                




        MALLOC(3C)       Kreider OS-9 C Library       MALLOC(3C)


             The CCAALLLLOOCC subroutine allocates space for an array of _n_e_l_e_m 
             elements of size _e_l_s_i_z_e.  The space is initialized to 
             zeros.  

        CCAAVVEEAATTSS 

             When RREEAALLLLOOCC returns 0, the block pointed to by _p_t_r may be 
             destroyed.  

        DDIIAAGGNNOOSSTTIICCSS 

             MMAALLLLOOCC, FFRREEEE, and CCAALLLLOOCC return a _n_u_l_l if no free memory 
             can be found, or if there was an error.  













































                                                                


