.so header
.tl /MALLOC(3C)/Kreider OS-9 C Library/MALLOC(3C)/
.sh NAME
.bb
malloc, free, realloc, calloc - memory allocation
.eb
.sh SYNOPSIS
.bb
char *malloc(size)
unsigned size;
.sp
free(ptr)
char *ptr;
.sp
char *realloc(ptr, size)
char *ptr;
unsigned size;
.sp
char *calloc(nelem, elsize)
unsigned nelem, elsize;
.eb
.sh DESCRIPTION
.db
The
.bo
MALLOC
and
.bo
FREE
subroutines
provide a simple general-purpose memory allocation package.
The
.bo
MALLOC
subroutine
returns a pointer to a block of at least
.ul
size
bytes beginning on a word boundary.
.sp
The argument to
.bo
FREE
is a pointer to a block previously allocated by
.bo
MALLOC.
This space is made available for further allocation,
but its contents are left undisturbed.
.sp
Needless to say, grave disorder will result if the space assigned by
.bo
MALLOC
is overrun or if some random number is handed to
.bo
FREE.
.sp
The
.bo
MALLOC
subroutine maintains multiple lists of free blocks according to size,
allocating space from the appropriate list. It calls
.ul
sbrk
to get more memory from the system when there is no
suitable space already free.
For further information, see 
.ul
brk().
.sp
The
.bo
REALLOC
subroutine changes the size of the block pointed to by
.ul
ptr
to
.ul
size
bytes and returns a pointer to the (possibly moved) block.
The contents will be unchanged up to the
lesser of the new and old sizes.
.sp
If the pointer arguement
.ul
ptr
is zero, then
.bo
REALLOC
degenerates into a
.bo
MALLOC.
.sp
In order to be compatible with older versions,
.ul
REALLOC
also works if
.ul
ptr
points to a block freed since the last call of
.bo
MALLOC, REALLOC,
or
.ul
CALLOC.
Sequences of
.bo
FREE, MALLOC, 
and
.bo
REALLOC
were previously used to attempt storage compaction.
This procedure is no longer recommended.
.sp
The
.bo
CALLOC
subroutine allocates space for an array of
.ul
nelem
elements of size
.ul
elsize.
The space is initialized to zeros.
.ed
.sh CAVEATS
.db
When
.bo
REALLOC
returns 0, the block pointed to by
.ul
ptr
may be destroyed.
.ed
.sh DIAGNOSTICS
.db
.bo
MALLOC, FREE,
and
.bo
CALLOC
return a
.ul
null
if no free memory can be found, or if there was an error.
.ed
