

        GETOPT(3C)       Kreider OS-9 C Library       GETOPT(3C)


        NNAAMMEE 

             getopt - Get an option letter from argument vector

        SSYYNNOOPPSSIISS 

             int getopt (argc, argv, optstring)
             int argc;
             char **argv, *optstring;

             extern char *optarg;
             extern int optind, opterr;

        DDEESSCCRRIIPPTTIIOONN 

             GGEETTOOPPTT returns the next option letter in _a_r_g_v that matches 
             a letter in _o_p_t_s_t_r_i_n_g. _O_p_t_s_t_r_i_n_g is a string of recognized 
             option letters; if a letter is followed by a colon, the 
             option is expected to have an argument that may or may not 
             be separated from it by white space.  _O_p_t_a_r_g is set to 
             point to the start of the option argument on return from 
             GGEETTOOPPTT.  

             GGEETTOOPPTT places in _o_p_t_i_n_d the _a_r_g_v index of the next argument 
             to be processed.  Because _o_p_t_i_n_d is external, it is 
             normally initialized to zero automatically before the first 
             call to GGEETTOOPPTT.  

             When all options have been processed (i.e., up to the first 
             non-option argument), GGEETTOOPPTT returns _E_O_F.  The special 
             option -- may be used to delimit the end of the options; 
             _E_O_F will be returned, and -- will be skipped.  

        DDIIAAGGNNOOSSTTIICCSS 

             GGEETTOOPPTT prints an error message on the stderr path and 
             returns a question mark (?) when it encounters an option 
             letter not included in _o_p_t_s_t_r_i_n_g.  This error message may 
             be disabled by setting _o_p_t_e_r_r to a non-zero value.  

        EEXXAAMMPPLLEE 

             The following code fragment shows how one might process the 
             arguments for a command that can take the mutually 
             exclusive options a and b, and the options f and o, both of 
             which require arguments: 

                  main (argc, argv)
                  int argc;
                  char **argv;
                  {
                       int c;
                       extern char *optarg;
                       extern int optind;




                                                                




        GETOPT(3C)       Kreider OS-9 C Library       GETOPT(3C)


                       .
                       .
                       .
                       .
                       while ((c = getopt(argc, argv, "abf:o:")) != EOF)
                            switch (c) {
                            case 'a':
                                 if (bflg)
                                      errflg++;
                                 else
                                      aflg++;
                                 break;
                            case 'b':
                                 if (aflg)
                                      errflg++;
                                 else
                                      bproc();
                                 break;
                            case 'f':
                                 ifile = optarg;
                                 break;
                            case 'o':
                                 ofile = optarg;
                                 break;
                            case '?':
                                 errflg++;
                            }
                       if (errflg) {
                            fprintf(stderr, "Usage: . . . ");
                            exit (2);
                       }
                       for ( ; optind < argc; optind++) {
                            if (access(argv[optind], 4)) {
                       .
                       .
                       .
                  }





















                                                                


