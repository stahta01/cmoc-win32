.so header
.tl /FSEEK(3C)/Kreider OS-9 C Library/FSEEK(3C)/
.sh NAME
.bb
fseek, ftell, rewind - reposition a file pointer or report position
.eb
.sh SYNOPSIS
.bb
#include <stdio.h>
.sp
fseek(fp, offset, place)
FILE *fp;
long offset;
int place;
.sp
long ftell(fp)
FILE *fp;
.sp
rewind(fp)
FILE *fp;
.sp
.eb
.sh DESCRIPTION
.db
The
.bo
FSEEK
function sets the position of the next input or output
operation on the already opened file pointed to by
.ul
fp.
The new position is at
.ul
offset
bytes
from the beginning, the current position, or the beginning of the file if
.ul
place
has the value 0, the current position if 1, or the end of the file if 2.
.PP
The
.bo
FSEEK
function undoes any effects of
.ul
ungetc()
and sorts out the problems associated with buffered I/O.
.PP
.bo
NOTE:
Using
.ul
lseek()
on a buffered file will produce unpredictable results.
.PP
The
.bo
FTELL
function returns the current value of the 
offset relative to the beginning
of the file associated with the file pointer
.ul
fp.
It is measured in bytes and is the only foolproof way to obtain an
.ul
offset
for
.bo
FSEEK.
.PP
The
.bo
REWIND 
function is equivalent to
.ul
fseek(fp, 0L, 0),
except that no value is returned. It returns the file pointer to the beginning
of the file.
.ed
.sh DIAGNOSTICS
.db
.bo
FSEEK
returns a -1 if the call is invalid, otherwise it returns zero.
.ed
.sh SEE ALSO
.bb
lseek()
.eb
