
// FILE ALLOCATION TABLE FORMAT

#ifndef _FAT_H
#define _FAT_H

#ifdef __COCO__

// THE FILE ALLOCATION TABLE (FAT) CONTAINS THE STATUS OF THE GRANULES ON A DISKETTE.
// THE FAT CONTAINS 6 CONTROL BYTES FOLLOWED BY 68 DATA BYTES (ONE PER GRANULE). ONLY THE
// FIRST TWO OF THE SIX CONTROL BYTES ARE USED. A VALUE OF $FF IS SAVED IN UNALLOCATED
// GRANULES. IF BITS 6 & 7 OF THE DATA BYTE ARE SET, THE GRANULE IS THE LAST GRANULE
// IN A FILE AND BITS 0-5 ARE THE NUMBER OF USED SECTORS IN THAT GRANULE. IF BITS 6 & 7
// ARE NOT SET, THE DATA BYTE CONTAINS THE NUMBER OF THE NEXT GRANULE IN THE FILE.
// OFFSETS TO FAT CONTROL BYTES

typedef struct {
    // ACTIVE FILE COUNTER : DISK TO RAM FAT IMAGE DISABLE
    byte fat0;
    // VALID DATA FLAG: 0=DISK DATA VALID, <> 0 = NEW FAT
    // DATA - DISK DATA INVALID
    byte fat1;
    byte reserved[4];                           // NOT USED
    byte dat[68];
} fat_t;

fat_t* fat_get(int drv);

#endif

#endif

